{"version":3,"file":"static/js/286.1b79112a.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactListItem.jsx","components/Spinner/Spinner.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/App.module.css?6c4d","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formBtn\":\"ContactForm_formBtn__qZGY3\"};","export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter;\n","import React, { useState } from 'react';\nimport css from '../ContactForm/ContactForm.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { toast } from 'react-toastify';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const newContact = {\n      // id: nanoid(6),\n      name,\n      number,\n    };\n\n    if (contacts.find(item => item.name === newContact.name)) {\n      toast.error(`${newContact.name} is already in contacts.`, {\n        position: 'top-right',\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'colored',\n      });\n      return;\n    }\n\n    dispatch(addContact(newContact));\n    toast.success('Contact added to the phonebook!', {\n      position: 'top-right',\n      autoClose: 5000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'colored',\n    });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div className={css.formBox}>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleChange}\n            value={name}\n            placeholder=\"Jacob Mercer\"\n          />\n        </label>\n        <label>\n          Mobile\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleChange}\n            value={number}\n            placeholder=\"Phone number\"\n          />\n        </label>\n        <button className={css.formBtn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsItem\":\"ContactList_contactsItem__x8C9b\",\"contactsList\":\"ContactList_contactsList__7leRd\",\"titleNotFound\":\"ContactList_titleNotFound__e3Dcu\",\"deleteButton\":\"ContactList_deleteButton__3hT3n\"};","import React from 'react';\nimport css from '../ContactList/ContactList.module.css';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useDispatch } from 'react-redux';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nconst ContactListItem = ({ name, phone, id }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = () => {\n    dispatch(deleteContact(id));\n    toast.info('Contact delete', {\n      position: 'top-right',\n      autoClose: 5000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'colored',\n    });\n  };\n\n  return (\n    <>\n      <li className={css.contactsItem}>\n        <p>{name} </p>\n        <p>{phone}</p>\n\n        <IconButton\n          aria-label=\"delete\"\n          size=\"medium\"\n          onClick={handleDeleteContact}\n        >\n          <DeleteIcon fontSize=\"inherit\" className={css.deleteButton} />\n        </IconButton>\n      </li>\n    </>\n  );\n};\n\nexport default ContactListItem;\n","import React from 'react';\nimport { RotatingLines } from 'react-loader-spinner';\n// import css from './Loader.module.css';\n\nconst Spinner = () => {\n  return (\n    <div>\n      <RotatingLines\n        strokeColor=\"white\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { useEffect } from 'react';\nimport css from '../ContactList/ContactList.module.css';\nimport ContactListItem from './ContactListItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  getContacts,\n  getError,\n  getFilter,\n  getIsLoading,\n} from 'redux/contacts/selectors';\nimport Spinner from 'components/Spinner/Spinner';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts) || [];\n  const filter = useSelector(getFilter);\n  const error = useSelector(getError);\n  const isLoading = useSelector(getIsLoading);\n\n  const normalizeFilter = filter.toLowerCase();\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizeFilter)\n  );\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  if (error) {\n    return <div className={css.titleNotFound}>Error loading contacts.</div>;\n  }\n\n  return (\n    <div>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <>\n          {filteredContacts.length === 0 ? (\n            <h2 className={css.titleNotFound}>Contacts not found :(</h2>\n          ) : (\n            <ul className={css.contactsList}>\n              {filteredContacts.map(contact => (\n                <ContactListItem\n                  key={contact.id}\n                  name={contact.name}\n                  phone={contact.number}\n                  id={contact.id}\n                />\n              ))}\n            </ul>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterInput\":\"Filter_filterInput__1Cysk\",\"filterLabel\":\"Filter_filterLabel__+pnW-\"};","import React from 'react';\nimport css from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/filterSlice';\nimport { getFilter } from 'redux/contacts/selectors';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    const { value } = e.target;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <label className={css.filterLabel}>\n      <input\n        className={css.filterInput}\n        type=\"text\"\n        value={filter}\n        onChange={changeFilter}\n        placeholder=\" Find contacts by name...\"\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"App_formContainer__Mumrk\",\"title\":\"App_title__Xrt9W\"};","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport React, { useEffect } from 'react';\nimport css from '../../src/components/App.module.css';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.formContainer}>\n      <h1 className={css.title}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={css.title}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","getFilter","filter","ContactForm","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","target","value","reset","className","css","onSubmit","preventDefault","newContact","find","item","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","addContact","type","pattern","title","required","onChange","placeholder","phone","id","IconButton","size","onClick","deleteContact","Delete","fontSize","strokeColor","strokeWidth","animationDuration","width","visible","normalizeFilter","toLowerCase","filteredContacts","contact","includes","useEffect","fetchContacts","length","map","setFilter"],"sourceRoot":""}